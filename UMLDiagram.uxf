<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=18
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced

//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>10</y>
      <w>320</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>Fraction

--

- num: int
- den: int

--

+ operator op(...): Fraction
+ operator cmp(...): bool
+ operator double(): double
+ toString(): std::string
- simplify(): void

&lt;&lt;friend&gt;&gt;
+ operator\&lt;&lt;(...): std::ostream&amp;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>380</x>
      <y>10</y>
      <w>320</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>Vector

--

- elements: vector&lt;Fraction&gt;
- size: int

--

+ operator +/-(Vector): Vector
+ operator *(Fraction): Vector
+ operator *(Vector): Fraction
+ length(): double
+ isVerticalTo(Vector): bool
//{x*y==0}
+ isParallelTo(Vector): bool
//{a1:b1==a2:b2==...==an:bn}
+ unitization(): Vector

&lt;&lt;friend&gt;&gt;
+ operator\&lt;&lt;(...): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>10</y>
      <w>320</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>Matrix

--

- cols: vector&lt;Vector&gt;
- size: struct{row: int, col: int}

--

+ transpose(): Matrix
//{return new Matrix}
+ operator +/-/*(Matrix): Matrix
+ operator *(Fraction): Matrix
+ rank(): int

&lt;&lt;friend&gt;&gt;
+ operator\&lt;&lt;(...): std::ostream&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>760</x>
      <y>420</y>
      <w>320</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>SquareMatrix

--

--

+ determinant(): Fraction
+ inverse(): SquareMatrix
+ eigenValue(): Fraction
+ adjugateMatrix(): SquareMatrix</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>910</x>
      <y>350</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>310</x>
      <y>180</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
fg=black
bg=black</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>180</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
fg=black
bg=black</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>0</x>
      <y>420</y>
      <w>700</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>bg=white
--
如果用C语言追求性能的话：

1. 以列存储要快一些

2. 快速矩阵乘法时间复杂度小于O(N^3)
   大概是O(N^2 * Log2.7 N)左右

3. 寄存器优化

4. 嵌入汇编</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
